package org.apache.xml.res;

import java.util.ListResourceBundle;

public class XMLErrorResources extends ListResourceBundle {
    public static final String ER_ARG_LOCALNAME_INVALID = "ER_ARG_LOCALNAME_INVALID";
    public static final String ER_ARG_LOCALNAME_NULL = "ER_ARG_LOCALNAME_NULL";
    public static final String ER_ARG_PREFIX_INVALID = "ER_ARG_PREFIX_INVALID";
    public static final String ER_AXIS_NOT_SUPPORTED = "ER_AXIS_NOT_SUPPORTED";
    public static final String ER_AXIS_TRAVERSER_NOT_SUPPORTED = "ER_AXIS_TRAVERSER_NOT_SUPPORTED";
    public static final String ER_CANNOT_CHANGE_WHILE_PARSING = "ER_CANNOT_CHANGE_WHILE_PARSING";
    public static final String ER_CANNOT_INIT_URI_EMPTY_PARMS = "ER_CANNOT_INIT_URI_EMPTY_PARMS";
    public static final String ER_CANNOT_OVERWRITE_CAUSE = "ER_CANNOT_OVERWRITE_CAUSE";
    public static final String ER_CANT_HAVE_MORE_THAN_ONE_ROOT = "ER_CANT_HAVE_MORE_THAN_ONE_ROOT";
    public static final String ER_CANT_OUTPUT_TEXT_BEFORE_DOC = "ER_CANT_OUTPUT_TEXT_BEFORE_DOC";
    public static final String ER_CHILD_HAS_NO_OWNER_DOCUMENT = "ER_CHILD_HAS_NO_OWNER_DOCUMENT";
    public static final String ER_CHILD_HAS_NO_OWNER_DOCUMENT_ELEMENT = "ER_CHILD_HAS_NO_OWNER_DOCUMENT_ELEMENT";
    public static final String ER_CHUNKEDINTARRAY_NOT_SUPPORTED = "ER_CHUNKEDINTARRAY_NOT_SUPPORTED";
    public static final String ER_COJOINROUTINESET_FAILED = "ER_COJOINROUTINESET_FAILED";
    public static final String ER_COROUTINE_CO_EXIT = "ER_COROUTINE_CO_EXIT";
    public static final String ER_COROUTINE_NOT_AVAIL = "ER_COROUTINE_NOT_AVAIL";
    public static final String ER_COROUTINE_PARAM = "ER_COROUTINE_PARAM";
    public static final String ER_COULD_NOT_INIT_PARSER = "ER_COULD_NOT_INIT_PARSER";
    public static final String ER_COULD_NOT_RESOLVE_NODE = "ER_COULD_NOT_RESOLVE_NODE";
    public static final String ER_CREATEDOCUMENT_NOT_SUPPORTED = "ER_CREATEDOCUMENT_NOT_SUPPORTED";
    public static final String ER_ERRORHANDLER_CREATED_WITH_NULL_PRINTWRITER = "ER_ERRORHANDLER_CREATED_WITH_NULL_PRINTWRITER";
    public static final String ER_EXCEPTION_CREATING_POOL = "ER_EXCEPTION_CREATING_POOL";
    public static final String ER_FRAG_FOR_GENERIC_URI = "ER_FRAG_FOR_GENERIC_URI";
    public static final String ER_FRAG_INVALID_CHAR = "ER_FRAG_INVALID_CHAR";
    public static final String ER_FRAG_WHEN_PATH_NULL = "ER_FRAG_WHEN_PATH_NULL";
    public static final String ER_FUNCTION_NOT_SUPPORTED = "ER_FUNCTION_NOT_SUPPORTED";
    public static final String ER_HOST_ADDRESS_NOT_WELLFORMED = "ER_HOST_ADDRESS_NOT_WELLFORMED";
    public static final String ER_INCRSAXSRCFILTER_NOT_RESTARTABLE = "ER_INCRSAXSRCFILTER_NOT_RESTARTABLE";
    public static final String ER_INVALID_PORT = "ER_INVALID_PORT";
    public static final String ER_ITERATOR_AXIS_NOT_IMPLEMENTED = "ER_ITERATOR_AXIS_NOT_IMPLEMENTED";
    public static final String ER_ITERATOR_CLONE_NOT_SUPPORTED = "ER_ITERATOR_CLONE_NOT_SUPPORTED";
    public static final String ER_LOCATION_UNKNOWN = "ER_LOCATION_UNKNOWN";
    public static final String ER_METHOD_NOT_SUPPORTED = "ER_METHOD_NOT_SUPPORTED";
    public static final String ER_NAME_CANT_START_WITH_COLON = "ER_NAME_CANT_START_WITH_COLON";
    public static final String ER_NODE_NON_NULL = "ER_NODE_NON_NULL";
    public static final String ER_NOT_SUPPORTED = "ER_NOT_SUPPORTED";
    public static final String ER_NO_DEFAULT_IMPL = "ER_NO_DEFAULT_IMPL";
    public static final String ER_NO_DTMIDS_AVAIL = "ER_NO_DTMIDS_AVAIL";
    public static final String ER_NO_FRAGMENT_STRING_IN_PATH = "ER_NO_FRAGMENT_STRING_IN_PATH";
    public static final String ER_NO_PARSE_CALL_WHILE_PARSING = "ER_NO_PARSE_CALL_WHILE_PARSING";
    public static final String ER_NO_PORT_IF_NO_HOST = "ER_NO_PORT_IF_NO_HOST";
    public static final String ER_NO_QUERY_STRING_IN_PATH = "ER_NO_QUERY_STRING_IN_PATH";
    public static final String ER_NO_SCHEME_INURI = "ER_NO_SCHEME_INURI";
    public static final String ER_NO_SCHEME_IN_URI = "ER_NO_SCHEME_IN_URI";
    public static final String ER_NO_USERINFO_IF_NO_HOST = "ER_NO_USERINFO_IF_NO_HOST";
    public static final String ER_OFFSET_BIGGER_THAN_SLOT = "ER_OFFSET_BIGGER_THAN_SLOT";
    public static final String ER_PARSER_DOTERMINATE_ANSWERS = "ER_PARSER_DOTERMINATE_ANSWERS";
    public static final String ER_PARSER_IN_USE = "ER_PARSER_IN_USE";
    public static final String ER_PATH_CONTAINS_INVALID_ESCAPE_SEQUENCE = "ER_PATH_CONTAINS_INVALID_ESCAPE_SEQUENCE";
    public static final String ER_PATH_INVALID_CHAR = "ER_PATH_INVALID_CHAR";
    public static final String ER_PORT_WHEN_HOST_NULL = "ER_PORT_WHEN_HOST_NULL";
    public static final String ER_PREFIX_MUST_RESOLVE = "ER_PREFIX_MUST_RESOLVE";
    public static final String ER_SCHEME_FROM_NULL_STRING = "ER_SCHEME_FROM_NULL_STRING";
    public static final String ER_SCHEME_NOT_CONFORMANT = "ER_SCHEME_NOT_CONFORMANT";
    public static final String ER_SCHEME_REQUIRED = "ER_SCHEME_REQUIRED";
    public static final String ER_SELF_CAUSATION_NOT_PERMITTED = "ER_SELF_CAUSATION_NOT_PERMITTED";
    public static final String ER_STARTPARSE_NEEDS_SAXPARSER = "ER_STARTPARSE_NEEDS_SAXPARSER";
    public static final String ER_STARTPARSE_WHILE_PARSING = "ER_STARTPARSE_WHILE_PARSING";
    public static final String ER_SYSTEMID_UNKNOWN = "ER_SYSTEMID_UNKNOWN";
    public static final String ER_TYPED_ITERATOR_AXIS_NOT_IMPLEMENTED = "ER_TYPED_ITERATOR_AXIS_NOT_IMPLEMENTED";
    public static final String ER_UNKNOWN_AXIS_TYPE = "ER_UNKNOWN_AXIS_TYPE";
    public static final String ER_XMLRDR_NOT_BEFORE_STARTPARSE = "ER_XMLRDR_NOT_BEFORE_STARTPARSE";

    public Object[][] getContents() {
        r0 = new Object[67][];
        r0[0] = new Object[]{"ER0000", "{0}"};
        r0[1] = new Object[]{"ER_FUNCTION_NOT_SUPPORTED", "Function not supported!"};
        r0[2] = new Object[]{ER_CANNOT_OVERWRITE_CAUSE, "Cannot overwrite cause"};
        r0[3] = new Object[]{ER_NO_DEFAULT_IMPL, "No default implementation found "};
        r0[4] = new Object[]{ER_CHUNKEDINTARRAY_NOT_SUPPORTED, "ChunkedIntArray({0}) not currently supported"};
        r0[5] = new Object[]{ER_OFFSET_BIGGER_THAN_SLOT, "Offset bigger than slot"};
        r0[6] = new Object[]{ER_COROUTINE_NOT_AVAIL, "Coroutine not available, id={0}"};
        r0[7] = new Object[]{ER_COROUTINE_CO_EXIT, "CoroutineManager received co_exit() request"};
        r0[8] = new Object[]{ER_COJOINROUTINESET_FAILED, "co_joinCoroutineSet() failed"};
        r0[9] = new Object[]{ER_COROUTINE_PARAM, "Coroutine parameter error ({0})"};
        r0[10] = new Object[]{ER_PARSER_DOTERMINATE_ANSWERS, "\nUNEXPECTED: Parser doTerminate answers {0}"};
        r0[11] = new Object[]{ER_NO_PARSE_CALL_WHILE_PARSING, "parse may not be called while parsing"};
        r0[12] = new Object[]{ER_TYPED_ITERATOR_AXIS_NOT_IMPLEMENTED, "Error: typed iterator for axis  {0} not implemented"};
        r0[13] = new Object[]{ER_ITERATOR_AXIS_NOT_IMPLEMENTED, "Error: iterator for axis {0} not implemented "};
        r0[14] = new Object[]{ER_ITERATOR_CLONE_NOT_SUPPORTED, "Iterator clone not supported"};
        r0[15] = new Object[]{ER_UNKNOWN_AXIS_TYPE, "Unknown axis traversal type: {0}"};
        r0[16] = new Object[]{ER_AXIS_NOT_SUPPORTED, "Axis traverser not supported: {0}"};
        r0[17] = new Object[]{ER_NO_DTMIDS_AVAIL, "No more DTM IDs are available"};
        r0[18] = new Object[]{"ER_NOT_SUPPORTED", "Not supported: {0}"};
        r0[19] = new Object[]{ER_NODE_NON_NULL, "Node must be non-null for getDTMHandleFromNode"};
        r0[20] = new Object[]{ER_COULD_NOT_RESOLVE_NODE, "Could not resolve the node to a handle"};
        r0[21] = new Object[]{ER_STARTPARSE_WHILE_PARSING, "startParse may not be called while parsing"};
        r0[22] = new Object[]{ER_STARTPARSE_NEEDS_SAXPARSER, "startParse needs a non-null SAXParser"};
        r0[23] = new Object[]{ER_COULD_NOT_INIT_PARSER, "could not initialize parser with"};
        r0[24] = new Object[]{ER_EXCEPTION_CREATING_POOL, "exception creating new instance for pool"};
        r0[25] = new Object[]{"ER_PATH_CONTAINS_INVALID_ESCAPE_SEQUENCE", "Path contains invalid escape sequence"};
        r0[26] = new Object[]{"ER_SCHEME_REQUIRED", "Scheme is required!"};
        r0[27] = new Object[]{"ER_NO_SCHEME_IN_URI", "No scheme found in URI: {0}"};
        r0[28] = new Object[]{"ER_NO_SCHEME_INURI", "No scheme found in URI"};
        r0[29] = new Object[]{"ER_PATH_INVALID_CHAR", "Path contains invalid character: {0}"};
        r0[30] = new Object[]{"ER_SCHEME_FROM_NULL_STRING", "Cannot set scheme from null string"};
        r0[31] = new Object[]{"ER_SCHEME_NOT_CONFORMANT", "The scheme is not conformant."};
        r0[32] = new Object[]{"ER_HOST_ADDRESS_NOT_WELLFORMED", "Host is not a well formed address"};
        r0[33] = new Object[]{"ER_PORT_WHEN_HOST_NULL", "Port cannot be set when host is null"};
        r0[34] = new Object[]{"ER_INVALID_PORT", "Invalid port number"};
        r0[35] = new Object[]{"ER_FRAG_FOR_GENERIC_URI", "Fragment can only be set for a generic URI"};
        r0[36] = new Object[]{"ER_FRAG_WHEN_PATH_NULL", "Fragment cannot be set when path is null"};
        r0[37] = new Object[]{"ER_FRAG_INVALID_CHAR", "Fragment contains invalid character"};
        r0[38] = new Object[]{ER_PARSER_IN_USE, "Parser is already in use"};
        r0[39] = new Object[]{ER_CANNOT_CHANGE_WHILE_PARSING, "Cannot change {0} {1} while parsing"};
        r0[40] = new Object[]{ER_SELF_CAUSATION_NOT_PERMITTED, "Self-causation not permitted"};
        r0[41] = new Object[]{"ER_NO_USERINFO_IF_NO_HOST", "Userinfo may not be specified if host is not specified"};
        r0[42] = new Object[]{"ER_NO_PORT_IF_NO_HOST", "Port may not be specified if host is not specified"};
        r0[43] = new Object[]{"ER_NO_QUERY_STRING_IN_PATH", "Query string cannot be specified in path and query string"};
        r0[44] = new Object[]{"ER_NO_FRAGMENT_STRING_IN_PATH", "Fragment cannot be specified in both the path and fragment"};
        r0[45] = new Object[]{"ER_CANNOT_INIT_URI_EMPTY_PARMS", "Cannot initialize URI with empty parameters"};
        r0[46] = new Object[]{ER_METHOD_NOT_SUPPORTED, "Method not yet supported "};
        r0[47] = new Object[]{ER_INCRSAXSRCFILTER_NOT_RESTARTABLE, "IncrementalSAXSource_Filter not currently restartable"};
        r0[48] = new Object[]{ER_XMLRDR_NOT_BEFORE_STARTPARSE, "XMLReader not before startParse request"};
        r0[49] = new Object[]{ER_AXIS_TRAVERSER_NOT_SUPPORTED, "Axis traverser not supported: {0}"};
        r0[50] = new Object[]{ER_ERRORHANDLER_CREATED_WITH_NULL_PRINTWRITER, "ListingErrorHandler created with null PrintWriter!"};
        r0[51] = new Object[]{ER_SYSTEMID_UNKNOWN, "SystemId Unknown"};
        r0[52] = new Object[]{ER_LOCATION_UNKNOWN, "Location of error unknown"};
        r0[53] = new Object[]{"ER_PREFIX_MUST_RESOLVE", "Prefix must resolve to a namespace: {0}"};
        r0[54] = new Object[]{ER_CREATEDOCUMENT_NOT_SUPPORTED, "createDocument() not supported in XPathContext!"};
        r0[55] = new Object[]{ER_CHILD_HAS_NO_OWNER_DOCUMENT, "Attribute child does not have an owner document!"};
        r0[56] = new Object[]{ER_CHILD_HAS_NO_OWNER_DOCUMENT_ELEMENT, "Attribute child does not have an owner document element!"};
        r0[57] = new Object[]{ER_CANT_OUTPUT_TEXT_BEFORE_DOC, "Warning: can't output text before document element!  Ignoring..."};
        r0[58] = new Object[]{ER_CANT_HAVE_MORE_THAN_ONE_ROOT, "Can't have more than one root on a DOM!"};
        r0[59] = new Object[]{ER_ARG_LOCALNAME_NULL, "Argument 'localName' is null"};
        r0[60] = new Object[]{ER_ARG_LOCALNAME_INVALID, "Localname in QNAME should be a valid NCName"};
        r0[61] = new Object[]{ER_ARG_PREFIX_INVALID, "Prefix in QNAME should be a valid NCName"};
        r0[62] = new Object[]{ER_NAME_CANT_START_WITH_COLON, "Name cannot start with a colon"};
        r0[63] = new Object[]{"BAD_CODE", "Parameter to createMessage was out of bounds"};
        r0[64] = new Object[]{"FORMAT_FAILED", "Exception thrown during messageFormat call"};
        r0[65] = new Object[]{"line", "Line #"};
        r0[66] = new Object[]{"column", "Column #"};
        return r0;
    }
}
