package org.apache.xpath.res;

import java.util.ListResourceBundle;
import java.util.Locale;
import java.util.MissingResourceException;
import java.util.ResourceBundle;

public class XPATHErrorResources extends ListResourceBundle {
    public static final String BAD_CODE = "BAD_CODE";
    public static final String ERROR0000 = "ERROR0000";
    public static final String ERROR_HEADER = "Error: ";
    public static final String ERROR_RESOURCES = "org.apache.xpath.res.XPATHErrorResources";
    public static final String ERROR_STRING = "#error";
    public static final String ER_ARG_CANNOT_BE_NULL = "ER_ARG_CANNOT_BE_NULL";
    public static final String ER_ASNODEITERATOR_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER = "ER_ASNODEITERATOR_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER";
    public static final String ER_AXES_NOT_ALLOWED = "ER_AXES_NOT_ALLOWED";
    public static final String ER_BOOLEAN_ARG_NO_LONGER_OPTIONAL = "ER_BOOLEAN_ARG_NO_LONGER_OPTIONAL";
    public static final String ER_CANNOT_CALL_SETSHOULDCACHENODE = "ER_CANNOT_CALL_SETSHOULDCACHENODE";
    public static final String ER_CANNOT_CREATE_URL = "ER_CANNOT_CREATE_URL";
    public static final String ER_CANNOT_DEAL_XPATH_TYPE = "ER_CANNOT_DEAL_XPATH_TYPE";
    public static final String ER_CANNOT_WRITE_TO_EMPTYNODELISTIMPL = "ER_CANNOT_WRITE_TO_EMPTYNODELISTIMPL";
    public static final String ER_CANT_CONVERT_TO_BOOLEAN = "ER_CANT_CONVERT_TO_BOOLEAN";
    public static final String ER_CANT_CONVERT_TO_MUTABLENODELIST = "ER_CANT_CONVERT_TO_MUTABLENODELIST";
    public static final String ER_CANT_CONVERT_TO_NODELIST = "ER_CANT_CONVERT_TO_NODELIST";
    public static final String ER_CANT_CONVERT_TO_NUMBER = "ER_CANT_CONVERT_TO_NUMBER";
    public static final String ER_CANT_CONVERT_TO_SINGLENODE = "ER_CANT_CONVERT_TO_SINGLENODE";
    public static final String ER_CANT_CONVERT_TO_STRING = "ER_CANT_CONVERT_TO_STRING";
    public static final String ER_CANT_CONVERT_TO_TYPE = "ER_CANT_CONVERT_TO_TYPE";
    public static final String ER_CANT_CONVERT_XPATHRESULTTYPE_TO_NUMBER = "ER_CANT_CONVERT_XPATHRESULTTYPE_TO_NUMBER";
    public static final String ER_CANT_GET_SNAPSHOT_LENGTH = "ER_CANT_GET_SNAPSHOT_LENGTH";
    public static final String ER_CONTEXT_HAS_NO_OWNERDOC = "ER_CONTEXT_HAS_NO_OWNERDOC";
    public static final String ER_COULDNOT_BE_FORMATTED_TO_NUMBER = "ER_COULDNOT_BE_FORMATTED_TO_NUMBER";
    public static final String ER_COULDNOT_CREATE_XMLPROCESSORLIAISON = "ER_COULDNOT_CREATE_XMLPROCESSORLIAISON";
    public static final String ER_COULDNOT_FIND_ENDOP_AFTER_OPLOCATIONPATH = "ER_COULDNOT_FIND_ENDOP_AFTER_OPLOCATIONPATH";
    public static final String ER_COULDNOT_FIND_FUNCTION = "ER_COULDNOT_FIND_FUNCTION";
    public static final String ER_COULDNOT_GET_VAR_NAMED = "ER_COULDNOT_GET_VAR_NAMED";
    public static final String ER_COULD_NOT_FIND_VAR = "ER_COULD_NOT_FIND_VAR";
    public static final String ER_COUNT_TAKES_1_ARG = "ER_COUNT_TAKES_1_ARG";
    public static final String ER_CURRENT_NOT_ALLOWED_IN_MATCH = "ER_CURRENT_NOT_ALLOWED_IN_MATCH";
    public static final String ER_CURRENT_TAKES_NO_ARGS = "ER_CURRENT_TAKES_NO_ARGS";
    public static final String ER_DETACH_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER = "ER_DETACH_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER";
    public static final String ER_DIDNOT_FIND_XPATH_SELECT_EXP = "ER_DIDNOT_FIND_XPATH_SELECT_EXP";
    public static final String ER_DOCUMENT_REPLACED = "ER_DOCUMENT_REPLACED";
    public static final String ER_DOC_MUTATED = "ER_DOC_MUTATED";
    public static final String ER_DTM_CANNOT_HANDLE_NODES = "ER_DTM_CANNOT_HANDLE_NODES";
    public static final String ER_EMPTY_EXPRESSION = "ER_EMPTY_EXPRESSION";
    public static final String ER_EMPTY_XPATH_RESULT = "ER_EMPTY_XPATH_RESULT";
    public static final String ER_ERROR_OCCURED = "ER_ERROR_OCCURED";
    public static final String ER_EXPECTED_BUT_FOUND = "ER_EXPECTED_BUT_FOUND";
    public static final String ER_EXPECTED_DOUBLE_QUOTE = "ER_EXPECTED_DOUBLE_QUOTE";
    public static final String ER_EXPECTED_LOC_PATH = "ER_EXPECTED_LOC_PATH";
    public static final String ER_EXPECTED_LOC_PATH_AT_END_EXPR = "ER_EXPECTED_LOC_PATH_AT_END_EXPR";
    public static final String ER_EXPECTED_LOC_STEP = "ER_EXPECTED_LOC_STEP";
    public static final String ER_EXPECTED_MATCH_PATTERN = "ER_EXPECTED_MATCH_PATTERN";
    public static final String ER_EXPECTED_NODE_TEST = "ER_EXPECTED_NODE_TEST";
    public static final String ER_EXPECTED_REL_LOC_PATH = "ER_EXPECTED_REL_LOC_PATH";
    public static final String ER_EXPECTED_REL_PATH_PATTERN = "ER_EXPECTED_REL_PATH_PATTERN";
    public static final String ER_EXPECTED_SINGLE_QUOTE = "ER_EXPECTED_SINGLE_QUOTE";
    public static final String ER_EXPECTED_STEP_PATTERN = "ER_EXPECTED_STEP_PATTERN";
    public static final String ER_EXTENSION_FUNCTION_CANNOT_BE_INVOKED = "ER_EXTENSION_FUNCTION_CANNOT_BE_INVOKED";
    public static final String ER_EXTRA_ILLEGAL_TOKENS = "ER_EXTRA_ILLEGAL_TOKENS";
    public static final String ER_FASTSTRINGBUFFER_CANNOT_BE_NULL = "ER_FASTSTRINGBUFFER_CANNOT_BE_NULL";
    public static final String ER_FEATURE_NAME_NULL = "ER_FEATURE_NAME_NULL";
    public static final String ER_FEATURE_UNKNOWN = "ER_FEATURE_UNKNOWN";
    public static final String ER_FOUND_COMMA_BUT_NO_FOLLOWING_ARG = "ER_FOUND_COMMA_BUT_NO_FOLLOWING_ARG";
    public static final String ER_FOUND_COMMA_BUT_NO_PRECEDING_ARG = "ER_FOUND_COMMA_BUT_NO_PRECEDING_ARG";
    public static final String ER_FSB_CANNOT_TAKE_STRING = "ER_FSB_CANNOT_TAKE_STRING";
    public static final String ER_FSB_NOT_SUPPORTED_XSTRINGFORCHARS = "ER_FSB_NOT_SUPPORTED_XSTRINGFORCHARS";
    public static final String ER_FUNCTION_TOKEN_NOT_FOUND = "ER_FUNCTION_TOKEN_NOT_FOUND";
    public static final String ER_GETTING_NULL_FEATURE = "ER_GETTING_NULL_FEATURE";
    public static final String ER_GETTING_UNKNOWN_FEATURE = "ER_GETTING_UNKNOWN_FEATURE";
    public static final String ER_IGNORABLE_WHITESPACE_NOT_HANDLED = "ER_IGNORABLE_WHITESPACE_NOT_HANDLED";
    public static final String ER_ILLEGAL_AXIS_NAME = "ER_ILLEGAL_AXIS_NAME";
    public static final String ER_ILLEGAL_VARIABLE_REFERENCE = "ER_ILLEGAL_VARIABLE_REFERENCE";
    public static final String ER_INCOMPATIBLE_TYPES = "ER_INCOMPATIBLE_TYPES";
    public static final String ER_INCORRECT_ARG_LENGTH = "ER_INCORRECT_ARG_LENGTH";
    public static final String ER_INCORRECT_PROGRAMMER_ASSERTION = "ER_INCORRECT_PROGRAMMER_ASSERTION";
    public static final String ER_INVALID_UTF16_SURROGATE = "ER_INVALID_UTF16_SURROGATE";
    public static final String ER_INVALID_XPATH_TYPE = "ER_INVALID_XPATH_TYPE";
    public static final String ER_KEY_HAS_TOO_MANY_ARGS = "ER_KEY_HAS_TOO_MANY_ARGS";
    public static final String ER_LOCALNAME_HAS_TOO_MANY_ARGS = "ER_LOCALNAME_HAS_TOO_MANY_ARGS";
    public static final String ER_NAMESPACEAXIS_NOT_IMPLEMENTED = "ER_NAMESPACEAXIS_NOT_IMPLEMENTED";
    public static final String ER_NAMESPACEURI_HAS_TOO_MANY_ARGS = "ER_NAMESPACEURI_HAS_TOO_MANY_ARGS";
    public static final String ER_NAME_HAS_TOO_MANY_ARGS = "ER_NAME_HAS_TOO_MANY_ARGS";
    public static final String ER_NODESETDTM_CANNOT_INDEX = "ER_NODESETDTM_CANNOT_INDEX";
    public static final String ER_NODESETDTM_CANNOT_ITERATE = "ER_NODESETDTM_CANNOT_ITERATE";
    public static final String ER_NODESETDTM_NOT_MUTABLE = "ER_NODESETDTM_NOT_MUTABLE";
    public static final String ER_NODESET_CANNOT_INDEX = "ER_NODESET_CANNOT_INDEX";
    public static final String ER_NODESET_CANNOT_ITERATE = "ER_NODESET_CANNOT_ITERATE";
    public static final String ER_NODESET_NOT_MUTABLE = "ER_NODESET_NOT_MUTABLE";
    public static final String ER_NON_ITERATOR_TYPE = "ER_NON_ITERATOR_TYPE";
    public static final String ER_NON_SNAPSHOT_TYPE = "ER_NON_SNAPSHOT_TYPE";
    public static final String ER_NORMALIZESPACE_HAS_TOO_MANY_ARGS = "ER_NORMALIZESPACE_HAS_TOO_MANY_ARGS";
    public static final String ER_NULL_ERROR_HANDLER = "ER_NULL_ERROR_HANDLER";
    public static final String ER_NULL_RESOLVER = "ER_NULL_RESOLVER";
    public static final String ER_NULL_XPATH_FUNCTION_RESOLVER = "ER_NULL_XPATH_FUNCTION_RESOLVER";
    public static final String ER_NULL_XPATH_VARIABLE_RESOLVER = "ER_NULL_XPATH_VARIABLE_RESOLVER";
    public static final String ER_NUMBER_HAS_TOO_MANY_ARGS = "ER_NUMBER_HAS_TOO_MANY_ARGS";
    public static final String ER_NUM_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER = "ER_NUM_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER";
    public static final String ER_OBJECT_MODEL_EMPTY = "ER_OBJECT_MODEL_EMPTY";
    public static final String ER_OBJECT_MODEL_NULL = "ER_OBJECT_MODEL_NULL";
    public static final String ER_OIERROR = "ER_OIERROR";
    public static final String ER_ONLY_ALLOWS = "ER_ONLY_ALLOWS";
    public static final String ER_PARSE_NOT_SUPPORTED = "ER_PARSE_NOT_SUPPORTED";
    public static final String ER_PATTERN_LITERAL_NEEDS_BE_QUOTED = "ER_PATTERN_LITERAL_NEEDS_BE_QUOTED";
    public static final String ER_PREDICATE_ILLEGAL_SYNTAX = "ER_PREDICATE_ILLEGAL_SYNTAX";
    public static final String ER_PREFIX_MUST_RESOLVE = "ER_PREFIX_MUST_RESOLVE";
    public static final String ER_PROBLEM_IN_DTM_NEXTSIBLING = "ER_PROBLEM_IN_DTM_NEXTSIBLING";
    public static final String ER_PROG_ASSERT_UNKNOWN_OPCODE = "ER_PROG_ASSERT_UNKNOWN_OPCODE";
    public static final String ER_RESOLVE_VARIABLE_RETURNS_NULL = "ER_RESOLVE_VARIABLE_RETURNS_NULL";
    public static final String ER_RTF_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER = "ER_RTF_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER";
    public static final String ER_SAX_API_NOT_HANDLED = "ER_SAX_API_NOT_HANDLED";
    public static final String ER_SETDOMFACTORY_NOT_SUPPORTED = "ER_SETDOMFACTORY_NOT_SUPPORTED";
    public static final String ER_SETTING_WALKER_ROOT_TO_NULL = "ER_SETTING_WALKER_ROOT_TO_NULL";
    public static final String ER_SOURCE_RETURN_TYPE_CANNOT_BE_NULL = "ER_SOURCE_RETURN_TYPE_CANNOT_BE_NULL";
    public static final String ER_STRINGLENGTH_HAS_TOO_MANY_ARGS = "ER_STRINGLENGTH_HAS_TOO_MANY_ARGS";
    public static final String ER_STRING_HAS_TOO_MANY_ARGS = "ER_STRING_HAS_TOO_MANY_ARGS";
    public static final String ER_STR_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER = "ER_STR_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER";
    public static final String ER_TRANSLATE_TAKES_3_ARGS = "ER_TRANSLATE_TAKES_3_ARGS";
    public static final String ER_TWO_OR_THREE = "ER_TWO_OR_THREE";
    public static final String ER_UNKNOWN_AXIS = "ER_UNKNOWN_AXIS";
    public static final String ER_UNKNOWN_MATCH_OPERATION = "ER_UNKNOWN_MATCH_OPERATION";
    public static final String ER_UNKNOWN_NODETYPE = "ER_UNKNOWN_NODETYPE";
    public static final String ER_UNKNOWN_OPCODE = "ER_UNKNOWN_OPCODE";
    public static final String ER_UNKNOWN_STEP = "ER_UNKNOWN_STEP";
    public static final String ER_UNPARSEDENTITYURI_TAKES_1_ARG = "ER_UNPARSEDENTITYURI_TAKES_1_ARG";
    public static final String ER_UNSUPPORTED_ENCODING = "ER_UNSUPPORTED_ENCODING";
    public static final String ER_UNSUPPORTED_RETURN_TYPE = "ER_UNSUPPORTED_RETURN_TYPE";
    public static final String ER_VARIABLE_ACCESSED_BEFORE_BIND = "ER_VARIABLE_ACCESSED_BEFORE_BIND";
    public static final String ER_VAR_NOT_RESOLVABLE = "ER_VAR_NOT_RESOLVABLE";
    public static final String ER_WRONG_DOCUMENT = "ER_WRONG_DOCUMENT";
    public static final String ER_WRONG_NODETYPE = "ER_WRONG_NODETYPE";
    public static final String ER_XERCES_CANNOT_HANDLE_NODES = "ER_XERCES_CANNOT_HANDLE_NODES";
    public static final String ER_XERCES_PARSE_ERROR = "ER_XERCES_PARSE_ERROR";
    public static final String ER_XERCES_PARSE_ERROR_DETAILS = "ER_XERCES_PARSE_ERROR_DETAILS";
    public static final String ER_XPATH_ERROR = "ER_XPATH_ERROR";
    public static final String ER_XPATH_READOBJECT = "ER_XPATH_READOBJECT";
    public static final String ER_XSTRINGFORCHARS_CANNOT_TAKE_STRING = "ER_XSTRINGFORCHARS_CANNOT_TAKE_STRING";
    public static final String ER_XSTR_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER = "ER_XSTR_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER";
    public static final String ER_ZERO_OR_ONE = "ER_ZERO_OR_ONE";
    public static final String FORMAT_FAILED = "FORMAT_FAILED";
    public static final String QUERY_HEADER = "PATTERN ";
    public static final String WARNING_HEADER = "Warning: ";
    public static final String WG_CANNOT_MAKE_URL_FROM = "WG_CANNOT_MAKE_URL_FROM";
    public static final String WG_COULDNOT_FIND_FUNCTION = "WG_COULDNOT_FIND_FUNCTION";
    public static final String WG_DONT_DO_ANYTHING_WITH_NS = "WG_DONT_DO_ANYTHING_WITH_NS";
    public static final String WG_EXPAND_ENTITIES_NOT_SUPPORTED = "WG_EXPAND_ENTITIES_NOT_SUPPORTED";
    public static final String WG_FUNCTION_TOKEN_NOT_FOUND = "WG_FUNCTION_TOKEN_NOT_FOUND";
    public static final String WG_ILLEGAL_VARIABLE_REFERENCE = "WG_ILLEGAL_VARIABLE_REFERENCE";
    public static final String WG_LOCALE_NAME_NOT_HANDLED = "WG_LOCALE_NAME_NOT_HANDLED";
    public static final String WG_NEED_DERIVED_OBJECT_TO_IMPLEMENT_NODETEST = "WG_NEED_DERIVED_OBJECT_TO_IMPLEMENT_NODETEST";
    public static final String WG_PROPERTY_NOT_SUPPORTED = "WG_PROPERTY_NOT_SUPPORTED";
    public static final String WG_QUO_NO_LONGER_DEFINED = "WG_QUO_NO_LONGER_DEFINED";
    public static final String WG_SECURITY_EXCEPTION = "WG_SECURITY_EXCEPTION";
    public static final String WG_UNSUPPORTED_ENCODING = "WG_UNSUPPORTED_ENCODING";
    public static final String XML_HEADER = "XML ";
    public static final String XSL_HEADER = "XSL ";

    public Object[][] getContents() {
        r0 = new Object[167][];
        r0[0] = new Object[]{ERROR0000, "{0}"};
        r0[1] = new Object[]{ER_CURRENT_NOT_ALLOWED_IN_MATCH, "The current() function is not allowed in a match pattern!"};
        r0[2] = new Object[]{ER_CURRENT_TAKES_NO_ARGS, "The current() function does not accept arguments!"};
        r0[3] = new Object[]{ER_DOCUMENT_REPLACED, "document() function implementation has been replaced by org.apache.xalan.xslt.FuncDocument!"};
        r0[4] = new Object[]{ER_CONTEXT_HAS_NO_OWNERDOC, "context does not have an owner document!"};
        r0[5] = new Object[]{ER_LOCALNAME_HAS_TOO_MANY_ARGS, "local-name() has too many arguments."};
        r0[6] = new Object[]{ER_NAMESPACEURI_HAS_TOO_MANY_ARGS, "namespace-uri() has too many arguments."};
        r0[7] = new Object[]{ER_NORMALIZESPACE_HAS_TOO_MANY_ARGS, "normalize-space() has too many arguments."};
        r0[8] = new Object[]{ER_NUMBER_HAS_TOO_MANY_ARGS, "number() has too many arguments."};
        r0[9] = new Object[]{ER_NAME_HAS_TOO_MANY_ARGS, "name() has too many arguments."};
        r0[10] = new Object[]{ER_STRING_HAS_TOO_MANY_ARGS, "string() has too many arguments."};
        r0[11] = new Object[]{ER_STRINGLENGTH_HAS_TOO_MANY_ARGS, "string-length() has too many arguments."};
        r0[12] = new Object[]{ER_TRANSLATE_TAKES_3_ARGS, "The translate() function takes three arguments!"};
        r0[13] = new Object[]{ER_UNPARSEDENTITYURI_TAKES_1_ARG, "The unparsed-entity-uri function should take one argument!"};
        r0[14] = new Object[]{ER_NAMESPACEAXIS_NOT_IMPLEMENTED, "namespace axis not implemented yet!"};
        r0[15] = new Object[]{ER_UNKNOWN_AXIS, "unknown axis: {0}"};
        r0[16] = new Object[]{ER_UNKNOWN_MATCH_OPERATION, "unknown match operation!"};
        r0[17] = new Object[]{ER_INCORRECT_ARG_LENGTH, "Arg length of processing-instruction() node test is incorrect!"};
        r0[18] = new Object[]{ER_CANT_CONVERT_TO_NUMBER, "Can not convert {0} to a number"};
        r0[19] = new Object[]{ER_CANT_CONVERT_TO_NODELIST, "Can not convert {0} to a NodeList!"};
        r0[20] = new Object[]{ER_CANT_CONVERT_TO_MUTABLENODELIST, "Can not convert {0} to a NodeSetDTM!"};
        r0[21] = new Object[]{ER_CANT_CONVERT_TO_TYPE, "Can not convert {0} to a type#{1}"};
        r0[22] = new Object[]{ER_EXPECTED_MATCH_PATTERN, "Expected match pattern in getMatchScore!"};
        r0[23] = new Object[]{ER_COULDNOT_GET_VAR_NAMED, "Could not get variable named {0}"};
        r0[24] = new Object[]{ER_UNKNOWN_OPCODE, "ERROR! Unknown op code: {0}"};
        r0[25] = new Object[]{ER_EXTRA_ILLEGAL_TOKENS, "Extra illegal tokens: {0}"};
        r0[26] = new Object[]{ER_EXPECTED_DOUBLE_QUOTE, "misquoted literal... expected double quote!"};
        r0[27] = new Object[]{ER_EXPECTED_SINGLE_QUOTE, "misquoted literal... expected single quote!"};
        r0[28] = new Object[]{ER_EMPTY_EXPRESSION, "Empty expression!"};
        r0[29] = new Object[]{ER_EXPECTED_BUT_FOUND, "Expected {0}, but found: {1}"};
        r0[30] = new Object[]{ER_INCORRECT_PROGRAMMER_ASSERTION, "Programmer assertion is incorrect! - {0}"};
        r0[31] = new Object[]{ER_BOOLEAN_ARG_NO_LONGER_OPTIONAL, "boolean(...) argument is no longer optional with 19990709 XPath draft."};
        r0[32] = new Object[]{ER_FOUND_COMMA_BUT_NO_PRECEDING_ARG, "Found ',' but no preceding argument!"};
        r0[33] = new Object[]{ER_FOUND_COMMA_BUT_NO_FOLLOWING_ARG, "Found ',' but no following argument!"};
        r0[34] = new Object[]{ER_PREDICATE_ILLEGAL_SYNTAX, "'..[predicate]' or '.[predicate]' is illegal syntax.  Use 'self::node()[predicate]' instead."};
        r0[35] = new Object[]{ER_ILLEGAL_AXIS_NAME, "illegal axis name: {0}"};
        r0[36] = new Object[]{ER_UNKNOWN_NODETYPE, "Unknown nodetype: {0}"};
        r0[37] = new Object[]{ER_PATTERN_LITERAL_NEEDS_BE_QUOTED, "Pattern literal ({0}) needs to be quoted!"};
        r0[38] = new Object[]{ER_COULDNOT_BE_FORMATTED_TO_NUMBER, "{0} could not be formatted to a number!"};
        r0[39] = new Object[]{ER_COULDNOT_CREATE_XMLPROCESSORLIAISON, "Could not create XML TransformerFactory Liaison: {0}"};
        r0[40] = new Object[]{ER_DIDNOT_FIND_XPATH_SELECT_EXP, "Error! Did not find xpath select expression (-select)."};
        r0[41] = new Object[]{ER_COULDNOT_FIND_ENDOP_AFTER_OPLOCATIONPATH, "ERROR! Could not find ENDOP after OP_LOCATIONPATH"};
        r0[42] = new Object[]{ER_ERROR_OCCURED, "Error occured!"};
        r0[43] = new Object[]{ER_ILLEGAL_VARIABLE_REFERENCE, "VariableReference given for variable out of context or without definition!  Name = {0}"};
        r0[44] = new Object[]{ER_AXES_NOT_ALLOWED, "Only child:: and attribute:: axes are allowed in match patterns!  Offending axes = {0}"};
        r0[45] = new Object[]{ER_KEY_HAS_TOO_MANY_ARGS, "key() has an incorrect number of arguments."};
        r0[46] = new Object[]{ER_COUNT_TAKES_1_ARG, "The count function should take one argument!"};
        r0[47] = new Object[]{ER_COULDNOT_FIND_FUNCTION, "Could not find function: {0}"};
        r0[48] = new Object[]{ER_UNSUPPORTED_ENCODING, "Unsupported encoding: {0}"};
        r0[49] = new Object[]{ER_PROBLEM_IN_DTM_NEXTSIBLING, "Problem occured in DTM in getNextSibling... trying to recover"};
        r0[50] = new Object[]{ER_CANNOT_WRITE_TO_EMPTYNODELISTIMPL, "Programmer error: EmptyNodeList can not be written to."};
        r0[51] = new Object[]{ER_SETDOMFACTORY_NOT_SUPPORTED, "setDOMFactory is not supported by XPathContext!"};
        r0[52] = new Object[]{"ER_PREFIX_MUST_RESOLVE", "Prefix must resolve to a namespace: {0}"};
        r0[53] = new Object[]{ER_PARSE_NOT_SUPPORTED, "parse (InputSource source) not supported in XPathContext! Can not open {0}"};
        r0[54] = new Object[]{ER_SAX_API_NOT_HANDLED, "SAX API characters(char ch[]... not handled by the DTM!"};
        r0[55] = new Object[]{ER_IGNORABLE_WHITESPACE_NOT_HANDLED, "ignorableWhitespace(char ch[]... not handled by the DTM!"};
        r0[56] = new Object[]{ER_DTM_CANNOT_HANDLE_NODES, "DTMLiaison can not handle nodes of type {0}"};
        r0[57] = new Object[]{ER_XERCES_CANNOT_HANDLE_NODES, "DOM2Helper can not handle nodes of type {0}"};
        r0[58] = new Object[]{ER_XERCES_PARSE_ERROR_DETAILS, "DOM2Helper.parse error: SystemID - {0} line - {1}"};
        r0[59] = new Object[]{ER_XERCES_PARSE_ERROR, "DOM2Helper.parse error"};
        r0[60] = new Object[]{"ER_INVALID_UTF16_SURROGATE", "Invalid UTF-16 surrogate detected: {0} ?"};
        r0[61] = new Object[]{"ER_OIERROR", "IO error"};
        r0[62] = new Object[]{ER_CANNOT_CREATE_URL, "Cannot create url for: {0}"};
        r0[63] = new Object[]{ER_XPATH_READOBJECT, "In XPath.readObject: {0}"};
        r0[64] = new Object[]{ER_FUNCTION_TOKEN_NOT_FOUND, "function token not found."};
        r0[65] = new Object[]{ER_CANNOT_DEAL_XPATH_TYPE, "Can not deal with XPath type: {0}"};
        r0[66] = new Object[]{ER_NODESET_NOT_MUTABLE, "This NodeSet is not mutable"};
        r0[67] = new Object[]{ER_NODESETDTM_NOT_MUTABLE, "This NodeSetDTM is not mutable"};
        r0[68] = new Object[]{ER_VAR_NOT_RESOLVABLE, "Variable not resolvable: {0}"};
        r0[69] = new Object[]{"ER_NULL_ERROR_HANDLER", "Null error handler"};
        r0[70] = new Object[]{ER_PROG_ASSERT_UNKNOWN_OPCODE, "Programmer''s assertion: unknown opcode: {0}"};
        r0[71] = new Object[]{ER_ZERO_OR_ONE, "0 or 1"};
        r0[72] = new Object[]{ER_RTF_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER, "rtf() not supported by XRTreeFragSelectWrapper"};
        r0[73] = new Object[]{ER_RTF_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER, "asNodeIterator() not supported by XRTreeFragSelectWrapper"};
        r0[74] = new Object[]{ER_DETACH_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER, "detach() not supported by XRTreeFragSelectWrapper"};
        r0[75] = new Object[]{ER_NUM_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER, "num() not supported by XRTreeFragSelectWrapper"};
        r0[76] = new Object[]{ER_XSTR_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER, "xstr() not supported by XRTreeFragSelectWrapper"};
        r0[77] = new Object[]{ER_STR_NOT_SUPPORTED_XRTREEFRAGSELECTWRAPPER, "str() not supported by XRTreeFragSelectWrapper"};
        r0[78] = new Object[]{ER_FSB_NOT_SUPPORTED_XSTRINGFORCHARS, "fsb() not supported for XStringForChars"};
        r0[79] = new Object[]{ER_COULD_NOT_FIND_VAR, "Could not find variable with the name of {0}"};
        r0[80] = new Object[]{ER_XSTRINGFORCHARS_CANNOT_TAKE_STRING, "XStringForChars can not take a string for an argument"};
        r0[81] = new Object[]{ER_FASTSTRINGBUFFER_CANNOT_BE_NULL, "The FastStringBuffer argument can not be null"};
        r0[82] = new Object[]{"ER_TWO_OR_THREE", "2 or 3"};
        r0[83] = new Object[]{ER_VARIABLE_ACCESSED_BEFORE_BIND, "Variable accessed before it is bound!"};
        r0[84] = new Object[]{ER_FSB_CANNOT_TAKE_STRING, "XStringForFSB can not take a string for an argument!"};
        r0[85] = new Object[]{ER_SETTING_WALKER_ROOT_TO_NULL, "\n !!!! Error! Setting the root of a walker to null!!!"};
        r0[86] = new Object[]{ER_NODESETDTM_CANNOT_ITERATE, "This NodeSetDTM can not iterate to a previous node!"};
        r0[87] = new Object[]{ER_NODESET_CANNOT_ITERATE, "This NodeSet can not iterate to a previous node!"};
        r0[88] = new Object[]{ER_NODESETDTM_CANNOT_INDEX, "This NodeSetDTM can not do indexing or counting functions!"};
        r0[89] = new Object[]{ER_NODESET_CANNOT_INDEX, "This NodeSet can not do indexing or counting functions!"};
        r0[90] = new Object[]{ER_CANNOT_CALL_SETSHOULDCACHENODE, "Can not call setShouldCacheNodes after nextNode has been called!"};
        r0[91] = new Object[]{ER_ONLY_ALLOWS, "{0} only allows {1} arguments"};
        r0[92] = new Object[]{ER_UNKNOWN_STEP, "Programmer''s assertion in getNextStepPos: unknown stepType: {0}"};
        r0[93] = new Object[]{ER_EXPECTED_REL_LOC_PATH, "A relative location path was expected following the '/' or '//' token."};
        r0[94] = new Object[]{ER_EXPECTED_LOC_PATH, "A location path was expected, but the following token was encountered:  {0}"};
        r0[95] = new Object[]{ER_EXPECTED_LOC_PATH_AT_END_EXPR, "A location path was expected, but the end of the XPath expression was found instead."};
        r0[96] = new Object[]{ER_EXPECTED_LOC_STEP, "A location step was expected following the '/' or '//' token."};
        r0[97] = new Object[]{ER_EXPECTED_NODE_TEST, "A node test that matches either NCName:* or QName was expected."};
        r0[98] = new Object[]{ER_EXPECTED_STEP_PATTERN, "A step pattern was expected, but '/' was encountered."};
        r0[99] = new Object[]{ER_EXPECTED_REL_PATH_PATTERN, "A relative path pattern was expected."};
        r0[100] = new Object[]{ER_CANT_CONVERT_TO_BOOLEAN, "The XPathResult of XPath expression ''{0}'' has an XPathResultType of {1} which cannot be converted to a boolean."};
        r0[101] = new Object[]{ER_CANT_CONVERT_TO_SINGLENODE, "The XPathResult of XPath expression ''{0}'' has an XPathResultType of {1} which cannot be converted to a single node. The method getSingleNodeValue applies only to types ANY_UNORDERED_NODE_TYPE and FIRST_ORDERED_NODE_TYPE."};
        r0[102] = new Object[]{ER_CANT_GET_SNAPSHOT_LENGTH, "The method getSnapshotLength cannot be called on the XPathResult of XPath expression ''{0}'' because its XPathResultType is {1}. This method applies only to types UNORDERED_NODE_SNAPSHOT_TYPE and ORDERED_NODE_SNAPSHOT_TYPE."};
        r0[103] = new Object[]{ER_NON_ITERATOR_TYPE, "The method iterateNext cannot be called on the XPathResult of XPath expression ''{0}'' because its XPathResultType is {1}. This method applies only to types UNORDERED_NODE_ITERATOR_TYPE and ORDERED_NODE_ITERATOR_TYPE."};
        r0[104] = new Object[]{ER_DOC_MUTATED, "Document mutated since result was returned. Iterator is invalid."};
        r0[105] = new Object[]{ER_INVALID_XPATH_TYPE, "Invalid XPath type argument: {0}"};
        r0[106] = new Object[]{ER_EMPTY_XPATH_RESULT, "Empty XPath result object"};
        r0[107] = new Object[]{ER_INCOMPATIBLE_TYPES, "The XPathResult of XPath expression ''{0}'' has an XPathResultType of {1} which cannot be coerced into the specified XPathResultType of {2}."};
        r0[108] = new Object[]{ER_NULL_RESOLVER, "Unable to resolve prefix with null prefix resolver."};
        r0[109] = new Object[]{ER_CANT_CONVERT_TO_STRING, "The XPathResult of XPath expression ''{0}'' has an XPathResultType of {1} which cannot be converted to a string."};
        r0[110] = new Object[]{ER_NON_SNAPSHOT_TYPE, "The method snapshotItem cannot be called on the XPathResult of XPath expression ''{0}'' because its XPathResultType is {1}. This method applies only to types UNORDERED_NODE_SNAPSHOT_TYPE and ORDERED_NODE_SNAPSHOT_TYPE."};
        r0[111] = new Object[]{ER_WRONG_DOCUMENT, "Context node does not belong to the document that is bound to this XPathEvaluator."};
        r0[112] = new Object[]{ER_WRONG_NODETYPE, "The context node type is not supported."};
        r0[113] = new Object[]{ER_XPATH_ERROR, "Unknown error in XPath."};
        r0[114] = new Object[]{ER_CANT_CONVERT_XPATHRESULTTYPE_TO_NUMBER, "The XPathResult of XPath expression ''{0}'' has an XPathResultType of {1} which cannot be converted to a number"};
        r0[115] = new Object[]{ER_EXTENSION_FUNCTION_CANNOT_BE_INVOKED, "Extension function: ''{0}'' can not be invoked when the XMLConstants.FEATURE_SECURE_PROCESSING feature is set to true."};
        r0[116] = new Object[]{ER_RESOLVE_VARIABLE_RETURNS_NULL, "resolveVariable for variable {0} returning null"};
        r0[117] = new Object[]{ER_UNSUPPORTED_RETURN_TYPE, "UnSupported Return Type : {0}"};
        r0[118] = new Object[]{ER_SOURCE_RETURN_TYPE_CANNOT_BE_NULL, "Source and/or Return Type can not be null"};
        r0[119] = new Object[]{ER_SOURCE_RETURN_TYPE_CANNOT_BE_NULL, "Source and/or Return Type can not be null"};
        r0[120] = new Object[]{ER_ARG_CANNOT_BE_NULL, "{0} argument can not be null"};
        r0[121] = new Object[]{ER_OBJECT_MODEL_NULL, "{0}#isObjectModelSupported( String objectModel ) cannot be called with objectModel == null"};
        r0[122] = new Object[]{ER_OBJECT_MODEL_EMPTY, "{0}#isObjectModelSupported( String objectModel ) cannot be called with objectModel == \"\""};
        r0[123] = new Object[]{ER_FEATURE_NAME_NULL, "Trying to set a feature with a null name: {0}#setFeature( null, {1})"};
        r0[124] = new Object[]{ER_FEATURE_UNKNOWN, "Trying to set the unknown feature \"{0}\":{1}#setFeature({0},{2})"};
        r0[125] = new Object[]{ER_GETTING_NULL_FEATURE, "Trying to get a feature with a null name: {0}#getFeature(null)"};
        r0[126] = new Object[]{ER_GETTING_UNKNOWN_FEATURE, "Trying to get the unknown feature \"{0}\":{1}#getFeature({0})"};
        r0[127] = new Object[]{ER_NULL_XPATH_FUNCTION_RESOLVER, "Attempting to set a null XPathFunctionResolver:{0}#setXPathFunctionResolver(null)"};
        r0[128] = new Object[]{ER_NULL_XPATH_VARIABLE_RESOLVER, "Attempting to set a null XPathVariableResolver:{0}#setXPathVariableResolver(null)"};
        r0[129] = new Object[]{WG_LOCALE_NAME_NOT_HANDLED, "locale name in the format-number function not yet handled!"};
        r0[130] = new Object[]{WG_PROPERTY_NOT_SUPPORTED, "XSL Property not supported: {0}"};
        r0[131] = new Object[]{WG_DONT_DO_ANYTHING_WITH_NS, "Do not currently do anything with namespace {0} in property: {1}"};
        r0[132] = new Object[]{WG_SECURITY_EXCEPTION, "SecurityException when trying to access XSL system property: {0}"};
        r0[133] = new Object[]{WG_QUO_NO_LONGER_DEFINED, "Old syntax: quo(...) is no longer defined in XPath."};
        r0[134] = new Object[]{WG_NEED_DERIVED_OBJECT_TO_IMPLEMENT_NODETEST, "XPath needs a derived object to implement nodeTest!"};
        r0[135] = new Object[]{WG_FUNCTION_TOKEN_NOT_FOUND, "function token not found."};
        r0[136] = new Object[]{WG_COULDNOT_FIND_FUNCTION, "Could not find function: {0}"};
        r0[137] = new Object[]{"WG_CANNOT_MAKE_URL_FROM", "Can not make URL from: {0}"};
        r0[138] = new Object[]{WG_EXPAND_ENTITIES_NOT_SUPPORTED, "-E option not supported for DTM parser"};
        r0[139] = new Object[]{WG_ILLEGAL_VARIABLE_REFERENCE, "VariableReference given for variable out of context or without definition!  Name = {0}"};
        r0[140] = new Object[]{WG_UNSUPPORTED_ENCODING, "Unsupported encoding: {0}"};
        r0[141] = new Object[]{"ui_language", "en"};
        r0[142] = new Object[]{"help_language", "en"};
        r0[143] = new Object[]{"language", "en"};
        r0[144] = new Object[]{"BAD_CODE", "Parameter to createMessage was out of bounds"};
        r0[145] = new Object[]{"FORMAT_FAILED", "Exception thrown during messageFormat call"};
        r0[146] = new Object[]{"version", ">>>>>>> Xalan Version "};
        r0[147] = new Object[]{"version2", "<<<<<<<"};
        r0[148] = new Object[]{"yes", "yes"};
        r0[149] = new Object[]{"line", "Line #"};
        r0[150] = new Object[]{"column", "Column #"};
        r0[151] = new Object[]{"xsldone", "XSLProcessor: done"};
        r0[152] = new Object[]{"xpath_option", "xpath options: "};
        r0[153] = new Object[]{"optionIN", "   [-in inputXMLURL]"};
        r0[154] = new Object[]{"optionSelect", "   [-select xpath expression]"};
        r0[155] = new Object[]{"optionMatch", "   [-match match pattern (for match diagnostics)]"};
        r0[156] = new Object[]{"optionAnyExpr", "Or just an xpath expression will do a diagnostic dump"};
        r0[157] = new Object[]{"noParsermsg1", "XSL Process was not successful."};
        r0[158] = new Object[]{"noParsermsg2", "** Could not find parser **"};
        r0[159] = new Object[]{"noParsermsg3", "Please check your classpath."};
        r0[160] = new Object[]{"noParsermsg4", "If you don't have IBM's XML Parser for Java, you can download it from"};
        r0[161] = new Object[]{"noParsermsg5", "IBM's AlphaWorks: http://www.alphaworks.ibm.com/formula/xml"};
        r0[162] = new Object[]{"gtone", ">1"};
        r0[163] = new Object[]{"zero", "0"};
        r0[164] = new Object[]{"one", "1"};
        r0[165] = new Object[]{"two", "2"};
        r0[166] = new Object[]{"three", "3"};
        return r0;
    }

    public static final XPATHErrorResources loadResourceBundle(String className) throws MissingResourceException {
        Locale locale = Locale.getDefault();
        try {
            return (XPATHErrorResources) ResourceBundle.getBundle(className + getResourceSuffix(locale), locale);
        } catch (MissingResourceException e) {
            try {
                return (XPATHErrorResources) ResourceBundle.getBundle(className, new Locale("en", "US"));
            } catch (MissingResourceException e2) {
                throw new MissingResourceException("Could not load any resource bundles.", className, "");
            }
        }
    }

    private static final String getResourceSuffix(Locale locale) {
        String suffix = "_" + locale.getLanguage();
        String country = locale.getCountry();
        if (country.equals("TW")) {
            return suffix + "_" + country;
        }
        return suffix;
    }
}
